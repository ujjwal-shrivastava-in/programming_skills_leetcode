class Solution {
public:
    string multiply(string num1, string num2) {

        if(num1 == "0" || num2 == "0") return "0";
        int l1 = num1.length();
        int l2 = num2.length();
        int tl = l1+l2;
        vector<int> res(tl,0);

        int i = l2 - 1;
        int pf = 0; // this will add zero or space after moving every loop
        while(i >= 0){
            int ival = num2[i]-'0';
            i--;
            int j = l1-1;
            int k = l1+l2 - 1 - pf;
            int carry = 0;
            while(j >= 0 || carry !=0){
                int jval = j >= 0 ? num1[j] - '0' : 0;
                j--;
                int prod = ival * jval + carry + res[k];
                res[k] = prod % 10;
                carry = prod / 10;
                k--;
            }
            pf++;
        }

        string s = "";
        bool flag = false;
        for(int val : res){
            if(val == 0 && flag == false){
                // leading zeroes
                continue;
            }else{
                flag = true;
                s+=to_string(val);
            }
        }
        
        return s.empty() ? "0" : s;
    }
};
