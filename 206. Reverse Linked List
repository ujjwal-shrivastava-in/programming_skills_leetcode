/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if(head == NULL) return head;
        ListNode* curr = head;
        vector<int> rev;
        while(curr != NULL){
            rev.push_back(curr->val);
            curr = curr -> next;
        }
        reverse(rev.begin(),rev.end());
        curr = head;

        for(int i=0;i<rev.size();i++){
            curr->val = rev[i];
            curr = curr->next;
        }

        return head;
    }
};
